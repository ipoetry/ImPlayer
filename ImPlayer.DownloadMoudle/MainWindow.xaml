<Window x:Class="ImPlayer.DownloadMoudle.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Height="600" Width="800" ResizeMode="NoResize"  WindowStyle="None" MouseLeftButtonDown="Window_MouseLeftButtonDown" xmlns:local="clr-namespace:ImPlayer.DownloadMoudle.MyConvert"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
        xmlns:Content="clr-namespace:ModernUIControl" >

    <Window.Resources>
        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="13"/>
            <Setter Property="Width" Value="13"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse  Stroke="#666666" StrokeThickness="0.8" >
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="#f6f5ec" Offset="0"/>
                                    <GradientStop Color="#f2eada" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EqualizerSlider" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinHeight}"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Width="4" Placement="Top" Grid.Column="0" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Width="4" Placement="Bottom" Grid.Column="2" Visibility="Collapsed"/>
                                <Border x:Name="TrackBackground"  CornerRadius="1" Width="4.0" Margin="0,5" Grid.Column="1" HorizontalAlignment="center">
                                    <Grid>
                                        <Border Background="#FF00CCFF" CornerRadius="1" Opacity="0.215"/>
                                        <!--F7F4F4   132E50-->
                                        <Border Background="#FF00CCFF" CornerRadius="1" Margin="0,0,0.3,0.3" Opacity="0.715"/>
                                    </Grid>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Column="1"  >
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="lbBtn" TargetType="{x:Type Label}" >
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True" >
                    <Setter  Property="Foreground"  Value="White"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter  Property="Background" Value="Red"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="lbBtn1" TargetType="{x:Type Label}" >
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True" >
                    <Setter  Property="Foreground"  Value="White"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter  Property="Background" Value="#FF666666"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <local:MyConvert x:Key="MyConvert"/>
        <local:ByteToMB x:Key="ByteToMB"/>
        <local:LinkToMark x:Key="LinkToMark"/>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="28" />
            <Setter Property="Foreground" Value="#323433" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                             BorderBrush="#e6dbba" 
                              Width="Auto">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                                <Rectangle Width="1" Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="30"/>
        </Style>
        <!--行样式触发-->
        <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
        <Style  TargetType="DataGridRow">
            <Setter Property="Background" Value="#F2F2F2" />
            <Setter Property="Height" Value="40"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="13"/>
            <Style.Triggers>
                <!--隔行换色-->
                <Trigger Property="AlternationIndex" Value="0" >
                    <Setter Property="Background" Value="#ffe7e7e7" />
                </Trigger>
                <Trigger Property="AlternationIndex" Value="1" >
                    <Setter Property="Background" Value="#f2f2f2" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                    <!--<Setter Property="Foreground" Value="White"/>-->
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <!--<Setter Property="Foreground" Value="Black"/>-->
                    <Setter Property="Background" Value="LightBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--单元格样式触发-->
        <Style TargetType="DataGridCell">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >
                           <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <!--<Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>-->
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextOnlyButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="4" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#00CCFF"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" BorderStyle="None" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Microsoft_Windows_Themes:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="Background" Value="#00CCFF"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Background" Value="#00CCFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ClearButtonTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="0" BorderBrush="Silver" BorderThickness="1" Padding="0,0,3,0" 
Background="{TemplateBinding Background}">
                            <DockPanel LastChildFill="True">
                                <Button Width="16" Height="16" x:Name="PART_ContentHostClearButton"
 DockPanel.Dock="Right" HorizontalAlignment="Right" Background="#666666">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="PART_Border" CornerRadius="0,3,0,3" 
BorderBrush="Transparent" BorderThickness="0" Padding="2">
                                                <Path x:Name="PART_Path" Data="M6,6 L6,6 10,10 M10,6 L10,6 6,10"
 Fill="Gray" Stretch="Fill" Stroke="Gray" StrokeThickness="2" HorizontalAlignment="Center"
 VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Stroke" TargetName="PART_Path" 
Value="#FFBA3232" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="UIElement.Effect">
                                                        <Setter.Value>
                                                            <DropShadowEffect BlurRadius="10" 
Color="Black" Direction="0" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True" />
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <ScrollViewer DockPanel.Dock="Left" x:Name="PART_ContentHost" 
Background="{TemplateBinding Background}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--当点击清除按钮后，清空文本框中的内容-->
                            <DataTrigger Binding="{Binding ElementName=PART_ContentHostClearButton,
Path=IsPressed}" Value="True">
                                <Setter Property="Text" Value="{x:Null}"/>
                            </DataTrigger>
                            <!--当文本框中有内容的时候显示清除按钮-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
Path=Text.Length}" Value="0"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
Path=IsFocused}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="PART_ContentHostClearButton" Property="Visibility"
 Value="Collapsed" />
                                    <Setter TargetName="PART_ContentHost" Property="Background">
                                        <Setter.Value>
                                            <VisualBrush Opacity="0.4" Stretch="None">
                                                <VisualBrush.Visual>
                                                    <TextBlock Text="请键入搜索内容" FontSize="12" 
HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <ResourceDictionary x:Key="TextBoxStyle">
        <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./Style/SerachTextBox.xaml" />
        </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="13*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Background="LightBlue">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Name="nvpb" Grid.Column="0" Grid.ColumnSpan="4" Visibility="Collapsed">
                    <Content:ControlsStylesProgressBar />
                </StackPanel>
                <Label Cursor="Hand" Content="✖" Width="28" Height="28" Grid.Column="5"  FontSize="15" Margin="-15,5,0,0"  HorizontalContentAlignment="Center" Foreground="White" Style="{StaticResource lbBtn}" MouseLeftButtonDown="Label_MouseLeftButtonDown"></Label>
                <Label Cursor="Hand" Content="━" Width="28" Height="28" Grid.Column="4" Margin="20,6,0,0" FontSize="16" HorizontalContentAlignment="Center" Foreground="White" Style="{StaticResource lbBtn1}" MouseLeftButtonDown="Label_MouseLeftButtonDown_1"></Label>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="1" Margin="0" Background="#78C0D9D9">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="9*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="1" Name="SearchText" HorizontalAlignment="Left" Height="24" Margin="0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="160" Style="{StaticResource ClearButtonTextBox}"/>
                    <Button  Grid.Column="2" IsDefault="True" Content="搜索" Foreground="White" Margin="15,0,45,0" Width="100" Style="{StaticResource TextOnlyButton}" Name="searchBtn" Click="searchBtn_Click" Height="24" VerticalAlignment="Bottom"/>
                    <Button  Grid.Column="2" Content="下载列表" Foreground="White" Margin="155,0,65,0" Width="100" Style="{StaticResource TextOnlyButton}" Name="DownLoadPage" Click="DownLoadPage_Click" Grid.ColumnSpan="2" Height="24" VerticalAlignment="Bottom" ></Button>
                </Grid>
                <Grid Grid.Row="1" Margin="0">
                    <DataGrid Grid.Row="1" Name="dd" AutoGenerateColumns="False" VerticalAlignment="Top"
                  CanUserSortColumns="False"  Width="800"   IsReadOnly="True"
                  CanUserResizeColumns="True" CanUserResizeRows="True"  SelectionMode="Single"
                  CanUserReorderColumns="False" AlternationCount="2"  RowHeaderWidth="0" CanUserAddRows="False" GridLinesVisibility="None" PreviewMouseRightButtonDown="datagrid_PreviewMouseRightButtonDown"  Margin="0" ItemsSource="{Binding}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="音乐标题" Width="240" Binding="{Binding Title}" />
                            <DataGridTextColumn Header="歌手"   Width="200" Binding="{Binding Author}"/>
                            <DataGridTextColumn Header="专辑"  Width="220"  Binding="{Binding Album_Title}"/>
                            <DataGridTemplateColumn Header="操作" Width="140">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Button Content="播放" Name="playBtn" Foreground="White" Style="{StaticResource TextOnlyButton}" Margin="8,1" Tag="{Binding  Song_Id}" Click="playBtn_Click"></Button>
                                            <Button Content="下载" Name="downloadBtn" Foreground="White" Style="{StaticResource TextOnlyButton}" Grid.Column="1" Margin="8,1" Tag="{Binding  Song_Id}" Click="downloadBtn_Click"></Button>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
                <Label FontSize="16" FontStyle="Italic" Content="!木有找到相关歌曲……" Foreground="Red" Grid.Row="1" Margin="20,50" Name="Tip" Visibility="Collapsed"></Label>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0">
            <TextBlock Text="转到" Margin="200,10,5,0"/>
            <TextBox Name="tbxPageNum" Text="" Width="57" Margin="5,10"  VerticalAlignment="Top" DataObject.Pasting="tbxPageNum_Pasting" PreviewKeyDown="tbxPageNum_PreviewKeyDown" PreviewTextInput="tbxPageNum_PreviewTextInput" />
            <Button Content="GO" Style="{StaticResource TextOnlyButton}" Foreground="White"   Margin="5,10" Cursor="Hand" Click="Button_Click"/>
            <Button Name="btnPre" Style="{StaticResource TextOnlyButton}" Foreground="White"  Margin="5,0,0,0" Content="上一页"  VerticalAlignment="Center" Click="btnPre_Click"  Cursor="Hand"/>
            <Button Name="btnNext" Style="{StaticResource TextOnlyButton}" Foreground="White"  Margin="5,0,0,0" Content="下一页"  VerticalAlignment="Center"  Click="btnNext_Click" Cursor="Hand"/>
            <TextBlock Height="20">  
                        <TextBlock Text="【当前" />  
                        <TextBlock Name="tbkCurrentsize" Foreground="Green" Text="{Binding currentPage}" />  
                        <TextBlock Text="页】" />  
                        <TextBlock Text="【共" />  
                        <TextBlock Name="tbkTotal" Foreground="Red" Text="{Binding totalPage}"/>  
                        <TextBlock Text="页】" />  
       </TextBlock>
        </StackPanel>
    </Grid>
</Window>

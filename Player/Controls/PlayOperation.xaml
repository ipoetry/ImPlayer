<UserControl x:Class="Player.PlayOperation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Player.Common"
             mc:Ignorable="d" 
              d:DesignHeight="70" d:DesignWidth="530" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <local:TimeSpanToSeconds x:Key="timeSpanToSeconds"></local:TimeSpanToSeconds>
        <Style x:Key="imageStyle" TargetType="Image">
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5">
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform></ScaleTransform>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimation Duration="0:0:0.1" From="1" To="0.8" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.1" From="1" To="1.2" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"></DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.1" From="1" To="1.2" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"></DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.1" From="0.8" To="1" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.1" From="1.2" To="1.0" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"></DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.1" From="1.2" To="1.0" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"></DoubleAnimation>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="play" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border>
                                <Image Name="img" Source="/Player;component/Images/nowplayplay_normal.png"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="img" Property="Source" Value="/Player;component/Images/zoomOutGrey.png">
                                    </Setter>
                                </Trigger>-->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="img" Property="Source" Value="/Player;component/Images/nowplayplay_pressed.png">
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="pause" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                            <Image Name="img" Source="/Player;component/Images/nowplaypause_normal.png"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="img" Property="Source" Value="/Player;component/Images/zoomOutGrey.png">
                                    </Setter>
                                </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="img" Property="Source" Value="/Player;component/Images/nowplaypause_pressed.png">
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="Mute" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                            <Image Name="img" Source="/Player;component/Images/mv_muted_normal.png"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="img" Property="Source" Value="/Player;component/Images/zoomOutGrey.png">
                                    </Setter>
                                </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="img" Property="Source" Value="/Player;component/Images/mv_muted_pressed.png">
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="notMute" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                            <Image Name="img" Source="/Player;component/Images/mv_mute_normal.png"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="img" Property="Source" Value="/Player;component/Images/zoomOutGrey.png">
                                    </Setter>
                                </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="img" Property="Source" Value="/Player;component/Images/mv_mute_pressed.png">
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse  Stroke="#666666" StrokeThickness="0.8" >
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="#f6f5ec" Offset="0"/>
                                    <GradientStop Color="#f2eada" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="single" TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter  Property="Source" Value="/Player;component/Images/modesingle_normal.png"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter  Property="Source" Value="/Player;component/Images/modesingle_pressed.png"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="random" TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter  Property="Source" Value="/Player;component/Images/moderandom_normal.png"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter  Property="Source" Value="/Player;component/Images/moderandom_pressed.png"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="circle" TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter  Property="Source" Value="/Player;component/Images/modecircle_normal.png"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter  Property="Source" Value="/Player;component/Images/modecircle_pressed.png"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="lrcCon" TargetType="{x:Type Label}" >
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True" >
                    <Setter  Property="Foreground"  Value="White"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter  Property="Foreground" Value="#33a3dc"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="btnPlayStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <StackPanel Orientation="Horizontal" >
                            <Button x:Name="sssdc" Style="{Binding Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="sssdc" Property="Style" Value="{ StaticResource pause}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="sssdc" Property="Style" Value="{ StaticResource play}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="btnMuteStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <StackPanel Orientation="Horizontal" >
                            <Button x:Name="sssdc1" Style="{Binding Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="sssdc1" Property="Style" Value="{ StaticResource Mute}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="sssdc1" Property="Style" Value="{ StaticResource notMute}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid MouseEnter="Border_MouseEnter" MouseLeave="Border_MouseLeave">
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="30*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Cursor="Hand" Orientation="Horizontal">
            <Canvas  Name="CL" Cursor="Hand" Width="510" Height="15"  HorizontalAlignment="Left" Margin="5,0" >
                <Rectangle Width="510" Cursor="Hand" Name="ChanelLength" Height="6"  Canvas.Left="0" Stroke="#CCCCCC"  Canvas.Top="5" MouseDown="ChanelLength_MouseDown" >
                </Rectangle>
                <Rectangle Width="{Binding Path=ChannelPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource timeSpanToSeconds}}" Cursor="Hand" Name="CurLen" Height="6" Canvas.Left="0"  Canvas.Top="5" MouseDown="CurLen_MouseDown" >
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                            <GradientStop Color="#00CCFF"  Offset="0"/>
                            <GradientStop Color="#00CCFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <Thumb Name="thumb2" Cursor="Hand"  Canvas.Top="3" Canvas.Left="{Binding Path=ChannelPosition,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource timeSpanToSeconds}}"  DragDelta="Thumb2_DragDelta"  Style="{StaticResource HorizontalSliderThumbStyle}" ></Thumb>
            </Canvas>
        </StackPanel>
        <StackPanel Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Button  Grid.Column="3" Width="36" Height="36" Name="btnPre" Click="btnPre_Click" Cursor="Hand" ToolTip="上一曲">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border>
                                <Image Name="img" Source="/Player;component/Images/nowplaypre_normal.png"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="img" Property="Source" Value="/Player;component/Images/nowplaypre_pressed.png">
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <!--如果Rb在同一容器内，必须要添加组名，才不会互相影响-->
                <RadioButton GroupName="PlayControl" Width="48" Grid.Column="4" Height="48" Name="btnPlay" Cursor="Hand" Style="{DynamicResource btnPlayStyle}" VerticalAlignment="Center" Click="btnPlay_Click" />
                <Button  Grid.Column="5" Width="36" Height="36" Name="btnNext" Click="btnNext_Click" Cursor="Hand" ToolTip="下一曲">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border>
                                <Image Name="img" Source="/Player;component/Images/nowplaynext_normal.png"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="img" Property="Source" Value="/Player;component/Images/nowplaynext_pressed.png">
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <RadioButton GroupName="VolumControl" Width="24" Height="24" x:Name="btnMute" Grid.Column="6" Cursor="Hand"   Style="{StaticResource btnMuteStyle}" VerticalAlignment="Center" Click="btnMute_Click" />
                <Slider Name="soundSlider"  Style="{StaticResource Slider_CustomStyle}" Maximum="1" Minimum="0"  Grid.Column="6"  Cursor="Hand" Width="110" Height="8"  HorizontalAlignment="Left" Margin="53,16,0,16" Grid.ColumnSpan="2" />
                <Image x:Name="btnPlayMode" Grid.Column="2" Style="{StaticResource single}" Width="30" Height="30" Tag="1"  Stretch="Fill" Cursor="Hand"  MouseLeftButtonDown="btnPlayMode_MouseLeftButtonDown" ToolTip="循环播放"/>

                <Label Grid.Column="0" Cursor="Hand" Margin="15,5,0,0"  Content="词" FontSize="26" FontFamily="华文彩云" Style="{StaticResource lrcCon}" MouseDown="btnLrcShow_MouseDown" ToolTip="歌词"></Label>
                <Label Grid.Column="1" Cursor="Hand" Margin="15,5,0,0"  Content="图" FontSize="26" FontFamily="华文彩云" Style="{StaticResource lrcCon}" MouseDown="btnPicShow_MouseDown" ToolTip="写真"></Label> 
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
